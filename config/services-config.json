{
  "_info": {
    "description": "LangChain Agent Runtime Services Configuration",
    "version": "3.0.0",
    "note": "Agent templates are discovered automatically from code, not configured here. Available templates: 'simple-test', 'workflow'"
  },
  "llm": {
    "providers": {
      "openai-gpt4": {
        "type": "openai",
        "model": "gpt-4o",
        "base_url": "${OPENAI_BASE_URL}",
        "temperature": 0.7,
        "max_tokens": 4000
      },
      "openai-gpt4-turbo": {
        "type": "openai",
        "model": "gpt-4-turbo-preview",
        "base_url": "${OPENAI_BASE_URL}",
        "temperature": 0.7,
        "max_tokens": 4000
      },
      "openai-gpt35": {
        "type": "openai",
        "model": "gpt-3.5-turbo",
        "base_url": "${OPENAI_BASE_URL}",
        "temperature": 0.7,
        "max_tokens": 2000
      },
      "anthropic-claude": {
        "type": "anthropic",
        "model": "claude-3-5-sonnet-20241022",
        "temperature": 0.7,
        "max_tokens": 4000
      },
      "anthropic-claude-haiku": {
        "type": "anthropic", 
        "model": "claude-3-haiku-20240307",
        "temperature": 0.7,
        "max_tokens": 2000
      },
      "deepseek": {
        "type": "deepseek",
        "model": "deepseek-chat",
        "base_url": "https://api.deepseek.com/v1",
        "temperature": 0.3,
        "max_tokens": 4000
      },
      "google-gemini": {
        "type": "google",
        "model": "gemini-1.5-pro",
        "temperature": 0.7,
        "max_tokens": 4000
      },
      "local-llama": {
        "type": "openai",
        "model": "llama3.1:8b",
        "base_url": "${LOCAL_LLM_BASE_URL}",
        "temperature": 0.7,
        "max_tokens": 2000
      },
      "test-mock": {
        "type": "test",
        "model": "test-model",
        "temperature": 0.7,
        "max_tokens": 1000
      }
    },
    "default_provider": "openai-gpt4",
    "fallback_provider": "openai-gpt35"
  },
  "toolsets": {
    "mcp": {
      "web-browsing": {
        "servers": [
          {
            "name": "web-browser",
            "transport": "stdio",
            "command": "npx",
            "args": ["@modelcontextprotocol/server-puppeteer"],
            "env": {
              "NODE_ENV": "production"
            },
            "timeout": 30
          }
        ]
      },
      "filesystem": {
        "servers": [
          {
            "name": "filesystem",
            "transport": "stdio",
            "command": "npx",
            "args": ["@modelcontextprotocol/server-filesystem", "/safe/workspace"],
            "env": {
              "NODE_ENV": "production"
            },
            "timeout": 15
          }
        ]
      },
      "database": {
        "servers": [
          {
            "name": "sqlite",
            "transport": "stdio",
            "command": "npx",
            "args": ["@modelcontextprotocol/server-sqlite", "/data/database.db"],
            "env": {
              "NODE_ENV": "production"
            },
            "timeout": 20
          }
        ]
      },
      "git-operations": {
        "servers": [
          {
            "name": "git",
            "transport": "stdio",
            "command": "npx",
            "args": ["@modelcontextprotocol/server-git", "/workspace"],
            "env": {
              "NODE_ENV": "production",
              "GIT_AUTHOR_NAME": "Agent",
              "GIT_AUTHOR_EMAIL": "agent@example.com"
            },
            "timeout": 30
          }
        ]
      },
      "email": {
        "servers": [
          {
            "name": "email",
            "transport": "stdio",
            "command": "python",
            "args": ["-m", "mcp_server_email"],
            "env": {
              "SMTP_HOST": "smtp.gmail.com",
              "SMTP_PORT": "587",
              "EMAIL_ADDRESS": "${EMAIL_ADDRESS}",
              "EMAIL_PASSWORD": "${EMAIL_APP_PASSWORD}"
            },
            "timeout": 25
          }
        ]
      },
      "code-execution": {
        "servers": [
          {
            "name": "python-executor",
            "transport": "stdio",
            "command": "python",
            "args": ["-m", "mcp_server_python"],
            "env": {
              "PYTHON_SANDBOX": "true",
              "MAX_EXECUTION_TIME": "30"
            },
            "timeout": 35
          }
        ]
      },
      "api-integration": {
        "servers": [
          {
            "name": "rest-api",
            "transport": "stdio",
            "command": "npx",
            "args": ["@modelcontextprotocol/server-fetch"],
            "env": {
              "NODE_ENV": "production",
              "MAX_REQUEST_SIZE": "10MB"
            },
            "timeout": 20
          }
        ]
      },
      "remote-mcp-server": {
        "servers": [
          {
            "name": "remote-analytics",
            "transport": "sse",
            "url": "https://analytics.example.com/mcp",
            "env": {
              "API_KEY": "${ANALYTICS_API_KEY}"
            },
            "timeout": 30
          }
        ]
      }
    },
    "custom": "all",
    "default_toolsets": [
      "filesystem",
      "web-browsing",
      "api-integration"
    ]
  },
  "monitoring": {
    "enable_metrics": true,
    "metrics_endpoint": "/metrics",
    "health_check_interval": 30,
    "log_requests": true,
    "trace_execution": false
  },
  "security": {
    "enable_rate_limiting": true,
    "requests_per_minute": 100,
    "enable_input_validation": true,
    "max_input_size": "1MB",
    "allowed_file_types": [".txt", ".md", ".json", ".csv", ".py", ".js"],
    "sandbox_execution": true
  }
}
